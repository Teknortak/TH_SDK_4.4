#pragma once

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CFpclocksvrctrl1 wrapper class

class CFpclocksvrctrl1 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CFpclocksvrctrl1)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x90C31B41, 0x1607, 0x46AA, { 0xAF, 0x4E, 0xE1, 0x5E, 0x43, 0xEF, 0x4B, 0xA3 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName, LPCTSTR lpszWindowName, DWORD dwStyle,
						const RECT& rect, CWnd* pParentWnd, UINT nID, 
						CCreateContext* pContext = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 
	}

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, 
				UINT nID, CFile* pPersist = NULL, BOOL bStorage = FALSE,
				BSTR bstrLicKey = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); 
	}

// Attributes
public:


// Operations
public:

// _DFPCLOCK_Svr

// Functions
//

	long OpenNetwork(long anHostPort)
	{
		long result;
		static BYTE parms[] = VTS_I4 ;
		InvokeHelper(0x1, DISPATCH_METHOD, VT_I4, (void*)&result, parms, anHostPort);
		return result;
	}
	long CloseNetwork(long anHostPort)
	{
		long result;
		static BYTE parms[] = VTS_I4 ;
		InvokeHelper(0x2, DISPATCH_METHOD, VT_I4, (void*)&result, parms, anHostPort);
		return result;
	}
	long SendResultandTime(long linkindex, long vnDeviceID, long vEnrollID, long result)
	{
		long dwresult;
		static BYTE parms[] = VTS_I4 VTS_I4 VTS_I4 VTS_I4 ;
		InvokeHelper(0x3, DISPATCH_METHOD, VT_I4, (void*)&dwresult, parms, linkindex, vnDeviceID, vEnrollID, result);
		return dwresult;
	}

// Properties
//



};
