#pragma once

// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.

/////////////////////////////////////////////////////////////////////////////
// CFpreaderctrl1 wrapper class

class CFpreaderctrl1 : public CWnd
{
protected:
	DECLARE_DYNCREATE(CFpreaderctrl1)
public:
	CLSID const& GetClsid()
	{
		static CLSID const clsid
			= { 0x23E095FE, 0x4E7D, 0x4179, { 0x9B, 0x25, 0xF7, 0x4, 0x7F, 0x6, 0xEE, 0x73 } };
		return clsid;
	}
	virtual BOOL Create(LPCTSTR lpszClassName, LPCTSTR lpszWindowName, DWORD dwStyle,
						const RECT& rect, CWnd* pParentWnd, UINT nID, 
						CCreateContext* pContext = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID); 
	}

    BOOL Create(LPCTSTR lpszWindowName, DWORD dwStyle, const RECT& rect, CWnd* pParentWnd, 
				UINT nID, CFile* pPersist = NULL, BOOL bStorage = FALSE,
				BSTR bstrLicKey = NULL)
	{ 
		return CreateControl(GetClsid(), lpszWindowName, dwStyle, rect, pParentWnd, nID,
		pPersist, bStorage, bstrLicKey); 
	}

// Attributes
public:


// Operations
public:

// _DFpreader

// Functions
//

	BOOL ConnectUsb()
	{
		BOOL result;
		InvokeHelper(0x1, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
		return result;
	}
	BOOL DisConnectUsb()
	{
		BOOL result;
		InvokeHelper(0x2, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
		return result;
	}
	BOOL GetVersion(long * versionindex, BSTR * versionchar)
	{
		BOOL result;
		static BYTE parms[] = VTS_PI4 VTS_PBSTR ;
		InvokeHelper(0x3, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, versionindex, versionchar);
		return result;
	}
	BOOL OnoffLED(long onoff)
	{
		BOOL result;
		static BYTE parms[] = VTS_I4 ;
		InvokeHelper(0x4, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, onoff);
		return result;
	}
	BOOL DetectFinger()
	{
		BOOL result;
		InvokeHelper(0x5, DISPATCH_METHOD, VT_BOOL, (void*)&result, NULL);
		return result;
	}
	BOOL GetTemplet(long step)
	{
		BOOL result;
		static BYTE parms[] = VTS_I4 ;
		InvokeHelper(0x6, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, step);
		return result;
	}
	BOOL GetImage(LPWSTR LPSZFileName)
	{
		BOOL result;
		static BYTE parms[] = VTS_BSTR ;
		InvokeHelper(0x7, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, LPSZFileName);
		return result;
	}
	BOOL GetMergeChar(VARIANT * dwEnrollData)
	{
		BOOL result;
		static BYTE parms[] = VTS_PVARIANT ;
		InvokeHelper(0x8, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, dwEnrollData);
		return result;
	}
	BOOL GetMergeCharWithstring(BSTR * dwEnrollData)
	{
		BOOL result;
		static BYTE parms[] = VTS_PBSTR ;
		InvokeHelper(0x9, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, dwEnrollData);
		return result;
	}
	BOOL VerifyFinger(VARIANT * dwEnrollData)
	{
		BOOL result;
		static BYTE parms[] = VTS_PVARIANT ;
		InvokeHelper(0xa, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, dwEnrollData);
		return result;
	}
	BOOL VerifyFingerWithstring(BSTR * dwEnrollData)
	{
		BOOL result;
		static BYTE parms[] = VTS_PBSTR ;
		InvokeHelper(0xb, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, dwEnrollData);
		return result;
	}
	BOOL MatchTwoFinger(VARIANT * dwEnrollData1, VARIANT * dwEnrollData2)
	{
		BOOL result;
		static BYTE parms[] = VTS_PVARIANT VTS_PVARIANT ;
		InvokeHelper(0xc, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, dwEnrollData1, dwEnrollData2);
		return result;
	}
	BOOL MatchTwoFingerWithstring(BSTR * dwEnrollData1, BSTR * dwEnrollData2)
	{
		BOOL result;
		static BYTE parms[] = VTS_PBSTR VTS_PBSTR ;
		InvokeHelper(0xd, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, dwEnrollData1, dwEnrollData2);
		return result;
	}
	BOOL GetLastError(long * dwErrorCode)
	{
		BOOL result;
		static BYTE parms[] = VTS_PI4 ;
		InvokeHelper(0xe, DISPATCH_METHOD, VT_BOOL, (void*)&result, parms, dwErrorCode);
		return result;
	}

// Properties
//



};
